# -*- coding: utf-8 -*-
"""LLD-Luxe_SEO-Strategy-Assistent.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1muD_2OTESvVYx4ZycxfaGiH7_0f0ko8s
"""
import streamlit as st
from dataclasses import dataclass
from typing import Tuple, Dict

# @title LLD Luxe - SEO Strategy Assistent

def parse_percentage(text):
    """Converte input tipo '45' o '45%' in float"""
    value = text.strip().replace("%", "")
    return float(value)

def compute_soc_tool():
    # === INPUT ===
    brand_name = input("Brand: ").strip()
    territory = input("Territory: ").strip()
    soc_brand = parse_percentage(input("Brand's SOC (%): "))
    soc_competitor = parse_percentage(input("1° Competitor Brand SOC (%): "))
    soc_publisher = parse_percentage(input("1° Publisher Competitor SOC (%): "))
    soc_eretailer = parse_percentage(input("1° eRetailer SOC(%): "))

    # === DIFFERENCES ===
    diff_comp = abs(soc_brand - soc_competitor)
    diff_pub = abs(soc_brand - soc_publisher)
    diff_er = abs(soc_brand - soc_eretailer)
    total_diff = diff_comp + diff_pub + diff_er

    # === MATURITY & STRATEGY ===
    if total_diff <= 10:
        maturity, strategy, num_content = "High", "Defend", "10–25"
    elif total_diff > 50:
        maturity, strategy, num_content = "Medium", "Growth", "25–50"
    else:
        maturity, strategy, num_content = "Low", "Attack", "50+"

    # === SPLIT ===
    if total_diff == 0:
        split_comp = split_pub = split_er = 0.0
    else:
        split_comp = 100 * diff_comp / total_diff
        split_pub = 100 * diff_pub / total_diff
        split_er = 100 * diff_er / total_diff

    # === OUTPUT ===
    print("\n=== Results ===")
    print(f"Brand: {brand_name} | Territory: {territory}")
    print(f"Difference vs Competitor: {diff_comp:.1f}%")
    print(f"Difference vs Publisher:  {diff_pub:.1f}%")
    print(f"Difference vs eRetailer:  {diff_er:.1f}%")
    print(f"Sum of Differences:       {total_diff:.1f}%")

    print("\nMaturity Level:", maturity)
    print("Strategy:", strategy)
    print("Number of Content:", num_content)

    print("\n=== Content Split ===")
    print(f"PdP + Hub Page: {split_comp:.1f}%")
    print(f"Article: {split_pub + split_er:.1f}%")
    #print(f"Channel: eRetailer, Content Type: PdP, Content Split: {split_er:.1f}%")


# Run the tool
compute_soc_tool()
